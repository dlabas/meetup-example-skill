{
  "name": "phoice/phlexa-expressive-skeleton",
  "description": "Skeleton application to build voice applications for Amazon Alexa with phlexa, PHP and Zend\\Expressive. ",
  "license": "MIT",
  "type": "project",
  "homepage": "https://www.phoice.tech/",
  "config": {
    "sort-packages": true
  },
  "extra": {
    "zf": {
      "component-whitelist": [
        "zendframework/zend-expressive",
        "zendframework/zend-expressive-helpers",
        "zendframework/zend-expressive-router",
        "zendframework/zend-httphandlerrunner",
        "zendframework/zend-expressive-zendrouter",
        "zendframework/zend-expressive-zendviewrenderer"
      ]
    }
  },
  "minimum-stability" : "beta",
  "require": {
    "php": "^7.1",
    "phoice/phlexa": "1.0.0-beta-3",
    "phoice/phlexa-expressive": "1.0.0-beta-3",
    "roave/security-advisories": "dev-master",
    "zendframework/zend-component-installer": "^2.1.1",
    "zendframework/zend-config-aggregator": "^1.0",
    "zendframework/zend-diactoros": "^1.7.1",
    "zendframework/zend-expressive": "^3.0.1",
    "zendframework/zend-expressive-helpers": "^5.0",
    "zendframework/zend-expressive-zendrouter": "^3.0",
    "zendframework/zend-expressive-zendviewrenderer": "^2.0",
    "zendframework/zend-servicemanager": "^3.3"
  },
  "require-dev": {
    "filp/whoops": "^2.1.12",
    "phpunit/phpunit": "^7.0",
    "squizlabs/php_codesniffer": "^2.9.1",
    "zendframework/zend-expressive-tooling": "^1.0"
  },
  "autoload": {
    "psr-4": {
      "Application\\": "module/Application/src/",
      "Hello\\": "module/Hello/src/",
      "KlausKinski\\": "module/KlausKinski/src"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "ApplicationTest\\": "module/Application/test/",
      "HelloTest\\": "module/Hello/test/"
    }
  },
  "scripts": {
    "check": [
      "@cs-check",
      "@test"
    ],
    "cs-check": "phpcs module/",
    "expressive": "expressive --ansi",
    "test": "phpunit --colors=always",
    "test-coverage": "phpunit --colors=always --coverage-html html/coverage/",
    "upload-coverage": "coveralls -v"
  }
}
